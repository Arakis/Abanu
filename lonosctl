#!/bin/bash

cd $(dirname $0)
source env/default

function configure {
	case $1 in
		all)
			configure patch apply
			;;

		patch)
			patch ${@:2}
			;;

		mosa)
			external/MOSA-Project/Source/Compile.sh
			;;

		*)
			echo $"Usage: lonosctl configure {patch|mosa}"
			exit 1
	esac
}

function patch {
	case $1 in
		apply)
			patches/apply
			;;

		revert)
			patches/apply --reverse
			;;

		*)
			echo $"Usage: lonosctl configure patch {apply|revert}"
			exit 1
	esac
}

function build {
	case $1 in
		all)
			build builder
			build assembly
			build native
			build disk
			;;

		builder)
			(cd src && msbuild lonos.build.sln /p:Configuration=Release)
			;;

		assembly)
			(cd src && msbuild lonos.kernel.sln /p:Configuration=Debug)
			;;

		native)
			src/lonos.native/build
			;;

		disk)
			(cd bin && mono ./lonos.build.exe)
			;;

		*)
			echo $"Usage: lonosctl build {builder|assembly|native|disk}"
			exit 1
	esac
}

function run {
	case $1 in
		bochs)
			bochs -f "${LONOS_PROJDIR}/conf/bochs.bxrc" -rc "${LONOS_PROJDIR}/conf/bochs.rc"
			;;

		qemu)
			qemu-system-i386 -L /usr/share/seabios -cpu qemu32,+sse4.1  -hda ${LONOS_OSDIR}/lonos.kernel.core.img -serial file:${LONOS_PROJDIR}/logs/kernel.log -d pcall,cpu_reset,guest_errors -D ${LONOS_PROJDIR}/logs/emulator.log
			;;

		*)
			echo $"Usage: lonosctl run {qemu|bochs}"
			exit 1
	esac
}

function logs {
	case $1 in
		kernel)
			less +F "${LONOS_PROJDIR}/logs/kernel.log"
			;;

		emulator)
			less +F "${LONOS_PROJDIR}/logs/emulator.log"
			;;

		*)
			echo $"Usage: lonosctl logs {kernel|emulator}"
			exit 1
	esac
}

case $1 in
	configure)
		configure ${@:2}
		;;

	build)
		build ${@:2}
		;;

	run)
		run ${@:2}
		;;

	logs)
		logs ${@:2}
		;;

	*)
		echo $"Usage: lonosctl {configure|build|run|logs}"
		exit 1
esac

